#Settings
version.1.8.9=I7
version.1.7.10=E7
version.1.7.2=F7

clouds=false
sun=false
moon=false
underwaterOverlay=false
oldLighting=false
vignette=false
shadowTranslucent=true
oldHandLight=false

#Options
sliders=SpecularityReflectionPower Tile_Resolution Bloom_Strength Bloom_Steps cameraAltitudeFixed Bloom_Size SSR_Steps SSR_Start Bloom_Scale Bloom_Sample_Lod \
shadowMapResolution Bloom_Sample_Scale Bloom_First_Steps HightQualityReflection SSAO_Scale TAA_Sharpen_Factor Reflection_Quality POM_Depth POM_Steps \
TAA_Color_Sampler_Size TAA_Depth_Sampler_Size POM_Self_Shadow_Fix Water_Color_Test Reflection_Scale TAA_Sharpen Temperature_and_Rainfall_Test TAA_Post_Sharpen \
TAA_ToneMapping sunPathRotation Exposure_Vault Altitude_Scale Bloom_Blend RSM_GI_Luminance RSM_GI_Saturation \
Stars_Luminance Stars_Speed Planet_Angle Polaris_Size Polaris_Offset_X Polaris_Offset_Y Polaris_Luminance Moon_Luminance Stars_Visible Moon_Radius Moon_Distance

screen=<empty> <empty> <empty> <empty> [LightingSetting] [PostProcessing] [Atmospheric] [Sky] <empty> <empty> Tile_Resolution Tile_Resolution_Auto_Detect Enabled_Door_Parallax_Fix <empty> <empty> <empty> [Graphic]
screen.Graphic=<empty> <empty> <empty> <empty> [Shadow] [Antialiasing] Global_Illumination <empty> [SSAO] <empty> [Reflection] <empty> [ParallaxOcclusionMapping]
screen.LightingSetting=<empty> <empty> <empty> <empty> Soft_Shadow_Quality RSM_GI_Quality <empty> <empty> Enabled_Screen_Space_Shadow RSM_GI_Luminance Enabled_Parallax_Self_Shadow RSM_GI_Saturation
#sunPathRotation <empty> <empty> <empty> Soft_Shadow_Quality Weather_Shadow_Quality <empty> Enabled_Screen_Space_Shadow <empty> <empty> Enabled_Global_Illumination <empty> Enabled_SSAO Enabled_SSAO_High_Quality
screen.PostProcessing=<empty> <empty> <empty> <empty> Enabled_TAA <empty> <empty> <empty> TAA_Sharpen Enabled_Bloom TAA_Post_Sharpen Bloom_Blend <empty> <empty> Very_Sharpe_Image Enabled_Average_Exposure TAA_No_Clip Exposure_Vault
screen.Atmospheric=<empty> <empty> <empty> <empty> Altitude_Scale <empty> <empty> <empty> Enabled_Volumetric_Clouds <empty> High_Quality_Clouds
screen.Sky=<empty> <empty> <empty> <empty> Moon_Luminance Stars_Luminance Moon_Radius Stars_Visible Moon_Distance Planet_Angle <empty> Stars_Speed <empty> <empty> Polaris_Size Polaris_Luminance Polaris_Offset_X Polaris_Offset_Y
screen.DEBUG=<empty> <empty> <empty> <empty> Water_Color_Test <empty> <empty> <empty> Temperature_and_Rainfall_Test <empty> <empty> <empty> RawOut
screen.CHEAT=<empty> <empty> <empty> <empty> winter_mode

screen.Antialiasing=<empty> <empty> <empty> <empty> Enabled_TAA <empty> TAA_Sharpen TAA_Post_Sharpen <empty> <empty>
screen.ParallaxOcclusionMapping=<empty> <empty> <empty> <empty> tileResolution POM_Self_Shadow_Fix <empty> <empty> POM_Depth POM_Steps
screen.Reflection=<empty> <empty> <empty> <empty> Continuum2_Texture_Format <empty> <empty> <empty> Reflection_Scale <empty> <empty> <empty> Reflection_Scale_Type Reflection_Filter
screen.Shadow=<empty> <empty> <empty> <empty> shadowMapResolution sunPathRotation <empty> <empty> Enabled_Soft_Shadow Enabled_ScreenSpace_Shadow <empty>  <empty>
screen.SSAO=<empty> <empty> <empty> <empty> Enabled_SSAO <empty> <empty> <empty> Enabled_SSAO_High_Quality

screen.Bloom=<empty> <empty> <empty> <empty> Enabled_Bloom <empty> <empty> <empty> <empty> <empty> Bloom_Steps Bloom_First_Steps Bloom_Strength Bloom_Sample_Scale <empty> <empty> <empty> Only_Bloom
screen.ScreenSpaceReflection=<empty> <empty> <empty> <empty> Low_Quality_Reflection Reflection_Scale <empty> <empty> Reflection_Scale_Type Reflection_Filter

#Uniforms
#uniform.int.heldBlockLightValue=max(heldBlockLightValue, heldBlockLightValue2, if(is_burning, 14, 0))

variable.float.smoothTemperature=smooth(temperature, 4, 4)
variable.float.smoothRainfall=smooth(rainfall, 4, 4)

uniform.float.biomeTemperature=smoothTemperature
uniform.float.biomeRainFall=smoothRainfall

variable.float.water_color_map_r=smooth(if(in(biome, 44, 47), 0.2627, in(biome, 45, 48), 0.2705, in(biome, 6, 134), 0.3803, in(biome, 46, 49), 0.2392, in(biome, 10, 50), 0.2235, 0.247 ), 4, 4)
variable.float.water_color_map_g=smooth(if(in(biome, 44, 47), 0.8352, in(biome, 45, 48), 0.6784, in(biome, 6, 134), 0.4823, in(biome, 46, 49), 0.3411, in(biome, 10, 50), 0.2196, 0.4627), 4, 4)
variable.float.water_color_map_b=smooth(if(in(biome, 44, 47), 0.9333, in(biome, 45, 48), 0.949 , in(biome, 6, 134), 0.3921, in(biome, 46, 49), 0.8392, in(biome, 10, 50), 0.7882, 0.8941), 4, 4)
uniform.vec3.vanillaWaterColor=vec3(water_color_map_r, water_color_map_g, water_color_map_b)

variable.float.dust_color_r=smooth(if(in(biome, 2, 17, 130), 0.8588, in(biome, 37, 165), 0.7107, in(biome, 38, 39, 166, 167), 0.5183, in(biome, 8), 0.3843, 1.0), 4, 4)
variable.float.dust_color_g=smooth(if(in(biome, 2, 17, 130), 0.8274, in(biome, 37, 165), 0.395 , in(biome, 38, 39, 166, 167), 0.3497, in(biome, 8), 0.149 , 1.0), 4, 4)
variable.float.dust_color_b=smooth(if(in(biome, 2, 17, 130), 0.6274, in(biome, 37, 165), 0.1637, in(biome, 38, 39, 166, 167), 0.2454, in(biome, 8), 0.149 , 1.0), 4, 4)
#variable.float.dust_color_a=
uniform.vec3.dustColor=vec3(dust_color_r, dust_color_g, dust_color_b)

uniform.vec2.resolution=vec2(viewWidth, viewHeight)
uniform.vec2.pixel=vec2(1.0 / viewWidth, 1.0 / viewHeight)

variable.int.frameIndex=frameCounter % 16
uniform.vec2.jitter=vec2(\
(if( \
frameIndex == 0 , 0.5, \
frameIndex == 1 , 0.25, \
frameIndex == 2 , 0.75, \
frameIndex == 3 , 0.125, \
frameIndex == 4 , 0.625, \
frameIndex == 5 , 0.375, \
frameIndex == 6 , 0.875, \
frameIndex == 7 , 0.0625, \
frameIndex == 8 , 0.5625, \
frameIndex == 9 , 0.3125, \
frameIndex == 10, 0.8125, \
frameIndex == 11, 0.1875, \
frameIndex == 12, 0.6875, \
frameIndex == 13, 0.4375, \
frameIndex == 14, 0.9375, \
0.03125) * 2.0 - 1.0) / viewWidth * 0.5, \
(if( \
frameIndex == 0 , 0.33333, \
frameIndex == 1 , 0.66666, \
frameIndex == 2 , 0.11111, \
frameIndex == 3 , 0.44444, \
frameIndex == 4 , 0.77777, \
frameIndex == 5 , 0.22222, \
frameIndex == 6 , 0.55555, \
frameIndex == 7 , 0.88888, \
frameIndex == 8 , 0.03703, \
frameIndex == 9 , 0.37037, \
frameIndex == 10, 0.7037, \
frameIndex == 11, 0.14814, \
frameIndex == 12, 0.48148, \
frameIndex == 13, 0.81481, \
frameIndex == 14, 0.25925, \
0.59259) * 2.0 - 1.0) / viewHeight * 0.5)

variable.int.frameIndexMod4=frameCounter % 4
uniform.vec2.reprojection=vec2(\
(if( \
frameIndexMod4 == 1 , 1.0, \
frameIndexMod4 == 2 , 1.0, \
0.0)) / viewWidth, \
(if( \
frameIndexMod4 == 2 , 1.0, \
frameIndexMod4 == 3 , 1.0, \
0.0)) / viewHeight)

variable.float.upPositionNormalized=1.0 / sqrt((upPosition.x*upPosition.x) + (upPosition.y*upPosition.y) + (upPosition.z*upPosition.z))
variable.float.sunPositionNormalized=1.0 / sqrt((sunPosition.x*sunPosition.x) + (sunPosition.y*sunPosition.y) + (sunPosition.z*sunPosition.z))
variable.float.moonPositionNormalized=1.0 / sqrt((moonPosition.x*moonPosition.x) + (moonPosition.y*moonPosition.y) + (moonPosition.z*moonPosition.z))
variable.float.lightPositionNormalized=1.0 / sqrt((shadowLightPosition.x*shadowLightPosition.x) + (shadowLightPosition.y*shadowLightPosition.y) + (shadowLightPosition.z*shadowLightPosition.z))

variable.float.sunVectorWorldX=gbufferModelViewInverse.0.0 * sunPosition.x + gbufferModelViewInverse.1.0 * sunPosition.y + gbufferModelViewInverse.2.0 * sunPosition.z
variable.float.sunVectorWorldY=gbufferModelViewInverse.0.1 * sunPosition.x + gbufferModelViewInverse.1.1 * sunPosition.y + gbufferModelViewInverse.2.1 * sunPosition.z
variable.float.sunVectorWorldZ=gbufferModelViewInverse.0.2 * sunPosition.x + gbufferModelViewInverse.1.2 * sunPosition.y + gbufferModelViewInverse.2.2 * sunPosition.z

variable.float.moonVectorWorldX=gbufferModelViewInverse.0.0 * moonPosition.x + gbufferModelViewInverse.1.0 * moonPosition.y + gbufferModelViewInverse.2.0 * moonPosition.z
variable.float.moonVectorWorldY=gbufferModelViewInverse.0.1 * moonPosition.x + gbufferModelViewInverse.1.1 * moonPosition.y + gbufferModelViewInverse.2.1 * moonPosition.z
variable.float.moonVectorWorldZ=gbufferModelViewInverse.0.2 * moonPosition.x + gbufferModelViewInverse.1.2 * moonPosition.y + gbufferModelViewInverse.2.2 * moonPosition.z

variable.float.lightVectorWorldX=gbufferModelViewInverse.0.0 * shadowLightPosition.x + gbufferModelViewInverse.1.0 * shadowLightPosition.y + gbufferModelViewInverse.2.0 * shadowLightPosition.z
variable.float.lightVectorWorldY=gbufferModelViewInverse.0.1 * shadowLightPosition.x + gbufferModelViewInverse.1.1 * shadowLightPosition.y + gbufferModelViewInverse.2.1 * shadowLightPosition.z
variable.float.lightVectorWorldZ=gbufferModelViewInverse.0.2 * shadowLightPosition.x + gbufferModelViewInverse.1.2 * shadowLightPosition.y + gbufferModelViewInverse.2.2 * shadowLightPosition.z

uniform.vec3.upVectorView=vec3(upPosition.x * upPositionNormalized, upPosition.y * upPositionNormalized, upPosition.z * upPositionNormalized)
uniform.vec3.sunVectorView=vec3(sunPosition.x * sunPositionNormalized, sunPosition.y * sunPositionNormalized, sunPosition.z * sunPositionNormalized)
uniform.vec3.moonVectorView=vec3(moonPosition.x * moonPositionNormalized, moonPosition.y * moonPositionNormalized, moonPosition.z * moonPositionNormalized)
uniform.vec3.lightVectorView=vec3(shadowLightPosition.x * lightPositionNormalized, shadowLightPosition.y * lightPositionNormalized, shadowLightPosition.z * lightPositionNormalized)

uniform.vec3.upVectorWorld=vec3(0.0, 1.0, 0.0)
uniform.vec3.sunVectorWorld=vec3(sunVectorWorldX * sunPositionNormalized, sunVectorWorldY * sunPositionNormalized, sunVectorWorldZ * sunPositionNormalized)
uniform.vec3.moonVectorWorld=vec3(moonVectorWorldX * moonPositionNormalized, moonVectorWorldY * moonPositionNormalized, moonVectorWorldZ * moonPositionNormalized)
uniform.vec3.lightVectorWorld=vec3(lightVectorWorldX * lightPositionNormalized, lightVectorWorldY * lightPositionNormalized, lightVectorWorldZ * lightPositionNormalized)

uniform.vec4.gbufferProjection0=vec4(gbufferProjection.0.0, gbufferProjection.1.0, gbufferProjection.2.0, gbufferProjection.3.0)
uniform.vec4.gbufferProjection1=vec4(gbufferProjection.0.1, gbufferProjection.1.1, gbufferProjection.2.1, gbufferProjection.3.1)
uniform.vec4.gbufferProjection2=vec4(gbufferProjection.0.2, gbufferProjection.1.2, gbufferProjection.2.2, gbufferProjection.3.2)
uniform.vec4.gbufferProjection3=vec4(gbufferProjection.0.3, gbufferProjection.1.3, gbufferProjection.2.3, gbufferProjection.3.3)

#variable.float.LightDotUp=(upVectorView.x * sunVectorView.x + upVectorView.y * sunVectorView.y + upVectorView.z * sunVectorView.z)
#uniform.float.fading=clamp((abs(LightDotUp) - 0.05) * 20.0, 0.0, 1.0)

#texture.noise=../assets/noise/BlueNoise64Magnified.png
#texture.noise=../assets/textures/noise.png

#Gbuffers
texture.gbuffers.gaux2=image/texture_1.png

backFace.solid=false
backFace.cutout=false
backFace.cutoutMipped=false
backFace.translucent=true

alphaTest.gbuffers_basic=off
blend.gbuffers_basic=ONE ZERO ONE ZERO

alphaTest.gbuffers_skybasic=off
blend.gbuffers_skybasic=ONE ZERO ZERO ZERO

alphaTest.gbuffers_textured=off
blend.gbuffers_textured=ONE ZERO ONE ZERO

alphaTest.gbuffers_skytextured=off
blend.gbuffers_skytextured=ONE ZERO ZERO ZERO

#alphaTest.gbuffers_terrain=0.2
blend.gbuffers_terrain=ONE ZERO ONE ZERO

#alphaTest.gbuffers_entities=0.2
blend.gbuffers_entities=ONE ZERO ONE ZERO

alphaTest.gbuffers_hand=off
blend.gbuffers_hand=ONE ZERO ONE ZERO

alphaTest.gbuffers_textured_lit=off
blend.gbuffers_textured_lit=ONE ZERO ONE ZERO

alphaTest.gbuffers_damagedblock=off
blend.gbuffers_damagedblock=SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ONE_MINUS_SRC_ALPHA

alphaTest.gbuffers_clouds=off
blend.gbuffers_clouds=ONE ZERO ONE ZERO

beacon.beam.depth=true
alphaTest.gbuffers_beaconbeam=off
blend.gbuffers_beaconbeam=ONE ZERO ONE ZERO

alphaTest.gbuffers_armor_glint=off
blen.gbuffers_armor_glint=ONE ZERO ONE ONE_MINUS_SRC_ALPHA

rain.depth=true
alphaTest.gbuffers_weather=off
blend.gbuffers_weather=ONE ZERO ONE ZERO

alphaTest.gbuffers_water=off
blend.gbuffers_water=SRC_ALPHA ONE_MINUS_SRC_ALPHA ONE ZERO

alphaTest.gbuffers_hand_water=off
blend.gbuffers_hand_water=ONE ZERO ONE ZERO

#Deferred
texture.deferred.depthtex1=minecraft:textures/environment/moon_phases.png
texture.deferred.depthtex2=../assets/noise/bluenoise64.png
texture.deferred.colortex9=../assets/noise/worley.png

#SSAO Setting
program.world0/deferred.enabled=High_Quality_Clouds && Enabled_Volumetric_Clouds
scale.deferred=0.5

program.world0/deferred1.enabled=true
scale.deferred1=0.5

scale.deferred4=1.0
program.world0/deferred4.enabled=true

program.world0/deferred6.enabled=true
program.world0/deferred7.enabled=true
scale.deferred6=0.5

#Composite
#texture.composite.depthtex2=minecraft:textures/environment/moon_phases.png
texture.composite.depthtex2=../assets/noise/bluenoise64.png
texture.composite.colortex9=../assets/noise/worley.png

#texture.composite.colortex8=../assets/noise/worley512_3.png
#texture.composite.colortex9=../assets/noise/worley128_3.png

program.world0/composite.enabled=true
scale.composite1=0.5
program.world0/composite1.enabled=true

program.world0/composite2.enabled=true

scale.composite3=0.5
program.world0/composite3.enabled=true

program.world0/composite4.enabled=true